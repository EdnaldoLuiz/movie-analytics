version: '3.8'

services:

###################### POSTGRES ######################

  postgres:
    container_name: postgres-db
    image: postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRESDB_LOCAL_PORT}:${POSTGRESDB_DOCKER_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - ./data/db:/var/lib/postgresql/data

###################### REDIS ######################

  redis:
    container_name: redis-cache
    image: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - 6379:6379
    volumes:
      - ./data/redis:/data

###################### APP ######################

  app:
    container_name: spring-app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        JAR_FILE: target/*.jar
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - ${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}
    volumes:
      - ./data/app:/app

###################### ELASTICSEARCH ######################

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data

###################### KIBANA ######################

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

###################### LOGSTASH ######################

  logstash:
    image: docker.elastic.co/logstash/logstash:8.3.3
    container_name: logstash
    volumes:
      - ./ELK/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./ELK/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - 5044:5044
      - 5000:5000/tcp
      - 5000:5000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: "-Xms256m -Xms256m"
    depends_on:
      - elasticsearch
